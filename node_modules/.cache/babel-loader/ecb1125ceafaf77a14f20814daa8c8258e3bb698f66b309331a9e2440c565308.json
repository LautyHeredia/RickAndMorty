{"ast":null,"code":"const regexEmail = `^(?=[^@]{3,8}@)([\\w.-][a-zA-Z0-9_]@(?=.{4,12}.[^.]$)[\\w-][a-zA-Z0-9].[a-zA-Z][a-zA-Z][a-zA-Z])$`;\nconst regexPassword = /[a-zA-Z]/ && /[0-9]/;\nexport function validation(userData) {\n  let errors = {};\n  if (!regexEmail.test(userData.username)) {\n    errors.username = \"El usuario debe ser un email\";\n  } else if (!userData.username) {\n    errors.username = \"Eln nombre de usuario no puede estar vacio\";\n  } else if (userData.username.length > 35) {\n    errors.username = \"El nombre de usuario no puede tener mas de 35 caracteres\";\n  } else if (!regexPassword.test(userData.regexPassword)) {\n    errors.password = \"Debe tener al menos un numero\";\n  } else if (userData.password.length < 6 && userData.password.length > 10) {\n    errors.password = \"La contraseña debe tener una longitud entre 6 y 10 caracteres\";\n  }\n  return errors;\n}","map":{"version":3,"names":["regexEmail","regexPassword","validation","userData","errors","test","username","length","password"],"sources":["C:/Users/lauta/OneDrive/Escritorio/Proyectos/rick_and_morty/src/components/form/validation.js"],"sourcesContent":["\r\nconst regexEmail = `^(?=[^@]{3,8}@)([\\w.-][a-zA-Z0-9_]@(?=.{4,12}.[^.]$)[\\w-][a-zA-Z0-9].[a-zA-Z][a-zA-Z][a-zA-Z])$`\r\nconst regexPassword = /[a-zA-Z]/ && /[0-9]/;\r\n\r\nexport function validation(userData){\r\n  let errors= {};\r\n\r\n  if(!regexEmail.test(userData.username)){\r\n    errors.username = \"El usuario debe ser un email\";\r\n  }else if(!userData.username){\r\n    errors.username = \"Eln nombre de usuario no puede estar vacio\";\r\n  }else if(userData.username.length > 35){\r\n    errors.username = \"El nombre de usuario no puede tener mas de 35 caracteres\"\r\n  }\r\n  else if(!regexPassword.test(userData.regexPassword)){\r\n    errors.password = \"Debe tener al menos un numero\";\r\n  }else if(userData.password.length< 6 && userData.password.length>10){\r\n    errors.password = \"La contraseña debe tener una longitud entre 6 y 10 caracteres\"\r\n  }\r\n  return errors;\r\n}"],"mappings":"AACA,MAAMA,UAAU,GAAI,iGAAgG;AACpH,MAAMC,aAAa,GAAG,UAAU,IAAI,OAAO;AAE3C,OAAO,SAASC,UAAU,CAACC,QAAQ,EAAC;EAClC,IAAIC,MAAM,GAAE,CAAC,CAAC;EAEd,IAAG,CAACJ,UAAU,CAACK,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAC;IACrCF,MAAM,CAACE,QAAQ,GAAG,8BAA8B;EAClD,CAAC,MAAK,IAAG,CAACH,QAAQ,CAACG,QAAQ,EAAC;IAC1BF,MAAM,CAACE,QAAQ,GAAG,4CAA4C;EAChE,CAAC,MAAK,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IACrCH,MAAM,CAACE,QAAQ,GAAG,0DAA0D;EAC9E,CAAC,MACI,IAAG,CAACL,aAAa,CAACI,IAAI,CAACF,QAAQ,CAACF,aAAa,CAAC,EAAC;IAClDG,MAAM,CAACI,QAAQ,GAAG,+BAA+B;EACnD,CAAC,MAAK,IAAGL,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAE,CAAC,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAC,EAAE,EAAC;IAClEH,MAAM,CAACI,QAAQ,GAAG,+DAA+D;EACnF;EACA,OAAOJ,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}